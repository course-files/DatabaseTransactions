services:

  apache-php:
    image: customized-apache-httpd-plus-php:1.0
    hostname: apache-2.4-php-8.2
    container_name: apache-2.4-php-8.2
    restart: always
    ports:
      - 8002:80
    volumes:
      # To store the web-related files in a persistent volume (directory/folder) in the host
      - apache-httpd-www:/var/www/html/
      # To store the PHP configuration file in the host
      - php-config:/usr/local/etc/php/
    environment:
      PHP_DISPLAY_ERRORS: 1
      PHP_DISPLAY_STARTUP_ERRORS: 1
    command: >
      /bin/bash -c "
      apache2-foreground
      "

  mysql-8.0.40-debian:
    image: customized-mysql:1.0
    hostname: mysql-8.0.40-debian
    container_name: mysql-8.0.40-debian
    restart: always
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: 5trathm0re
    volumes:
      # To store the server's configuration file in the host
      - mysql-config:/etc/mysql/
      # To store the server's log files in the host
      - mysql-log:/var/log/mysql/
      # To store the server's data persistently in the host
      - mysql-data:/var/lib/mysql
      # To run the SQL scripts used to create the required databases
      - mysql-init:/docker-entrypoint-initdb.d/
    command: >
      /bin/bash -c "
      chmod 644 /etc/mysql/my.cnf &&
      chmod 644 /etc/mysql/conf.d/docker.cnf &&
      chmod 644 /etc/mysql/conf.d/mysql.cnf &&
      exec docker-entrypoint.sh mysqld
      "

  postgres-17.2:
    image: postgres:17.2
    hostname: postgres-17.2
    container_name: postgres-17.2
    restart: always
    shm_size: 1g
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 5trathm0re
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      # To store the server's configuration files (postgresql.conf and pg_hba.conf) in the host
      - postgres-config:/etc/postgresql/
      # To store the server's log files in the host
      - postgres-log:/var/log/postgresql/
      # To store the server's data persistently in the host
      - postgres-data:/var/lib/postgresql/data
      # To run the SQL scripts used to create the required databases
      - postgres-init:/docker-entrypoint-initdb.d/
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'

volumes:
  mysql-config:
    driver: local # The volume will be stored locally on the host machine
    driver_opts:
      type: none # Binds to the path specified in "device" instead of creating a new directory/file on the host
      o: bind # Confirms that Docker maps a directory/file on the host directly into the container
      device: ./container-volumes/mysql/etc-mysql/
  mysql-log:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./container-volumes/mysql/var-log-mysql/
  mysql-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./container-volumes/mysql/var-lib-mysql/
  mysql-init:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./container-volumes/mysql/init-scripts/

  postgres-config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./container-volumes/postgresql/etc-postgresql/
  postgres-log:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./container-volumes/postgres/var-log-postgres/
  postgres-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./container-volumes/postgresql/var-lib-postgresql-data/
  postgres-init:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./container-volumes/postgres/init-scripts/

  apache-httpd-www:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./container-volumes/apache/var-www-html/
  php-config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./container-volumes/apache/etc-php/